#!/bin/bash

GIT_ROOT="$(realpath "$(dirname "$0")/..")"
CHARTS_ROOT="${GIT_ROOT}/charts"

function usage() {
    echo "Usage:"
    echo "update-deps"
    echo "    -h                Display usage."
    echo "    -R                Skip downloading remote dependencies."
    echo "    -l                Package local dependencies and copy them to the dependendents."
    echo "                      Skipped by default."
    echo ""
    exit 0
}

function fatal() {
    error "${@}"
    exit 1
}

function error() {
    echo "${1}" 1>&2
}

function update_remote_deps() {
    printf "Updating local repo cache...\n\n"
    helm repo update

    for chart in "${CHARTS_ROOT}"/*/ ; do
        printf "\nUpdating remote dependencies of %s...\n\n" "$chart"
        helm dependency update "$chart" --skip-refresh
    done
}

function update_local_deps() {
    printf "No local deps to package and copy\n\n"
}

function package_and_copy_local_deps() {
    local chart="$1"
    local dependent_charts=("${@:2}")

    printf "Packaging %s chart...\n" "$chart"
    chart_tgz="$(helm package "$chart" --destination /tmp | sed 's/^Successfully packaged chart and saved it to: //')"

    printf "Copying %s chart tgz to dependents...\n\n" "$chart_tgz"
    for dependent_chart in "${dependent_charts[@]}" ; do
        cp "$chart_tgz" "$dependent_chart/charts/"
    done
}

skip_remote_deps=false
package_local_deps=false

while getopts ":hRl" opt; do
    case ${opt} in
        h )
            usage
        ;;
        R )
            skip_remote_deps=true
        ;;
        l )
            package_local_deps=true
        ;;
        \? )
            fatal "Invalid Option: -${OPTARG}"
        ;;
        : )
            fatal "Invalid option: ${OPTARG} requires an argument"
        ;;
    esac
done

if [ "${skip_remote_deps}" != true ] ; then
    update_remote_deps
fi

if [ "${package_local_deps}" == true ] ; then
    update_local_deps
fi
